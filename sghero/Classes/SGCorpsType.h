#ifndef SG_CORPS_TYPE_H
#define SG_CORPS_TYPE_H

#include <vector>

#define CORPS_MAX_LEVEL	3

#define CORPS_GROUP1_ID01	0x00000001
#define CORPS_GROUP1_ID02	0x00000002
#define CORPS_GROUP1_ID03	0x00000004
#define CORPS_GROUP1_ID04	0x00000008
#define CORPS_GROUP1_ID05	0x00000010
#define CORPS_GROUP1_ID06	0x00000020
#define CORPS_GROUP1_ID07	0x00000040
#define CORPS_GROUP1_ID08	0x00000080
#define CORPS_GROUP1_ID09	0x00000100
#define CORPS_GROUP1_ID10	0x00000200
#define CORPS_GROUP1_ID11	0x00000400
#define CORPS_GROUP1_ID12	0x00000800
#define CORPS_GROUP1_ID13	0x00001000
#define CORPS_GROUP1_ID14	0x00002000
#define CORPS_GROUP1_ID15	0x00004000
#define CORPS_GROUP1_ID16	0x00008000
#define CORPS_GROUP1_ID17	0x00010000
#define CORPS_GROUP1_ID18	0x00020000
#define CORPS_GROUP1_ID19	0x00040000
#define CORPS_GROUP1_ID20	0x00080000
#define CORPS_GROUP1_ID21	0x00100000
#define CORPS_GROUP1_ID22	0x00200000
#define CORPS_GROUP1_ID23	0x00400000
#define CORPS_GROUP1_ID24	0x00800000
#define CORPS_GROUP1_ID25	0x01000000
#define CORPS_GROUP1_ID26	0x02000000
#define CORPS_GROUP1_ID27	0x04000000
#define CORPS_GROUP1_ID28	0x08000000
#define CORPS_GROUP1_ID29	0x10000000
#define CORPS_GROUP1_ID30	0x20000000
#define CORPS_GROUP1_ID31	0x40000000
#define CORPS_GROUP2_ID01	0x00000001
#define CORPS_GROUP2_ID02	0x00000002
#define CORPS_GROUP2_ID03	0x00000004
#define CORPS_GROUP2_ID04	0x00000008
#define CORPS_GROUP2_ID05	0x00000010
#define CORPS_GROUP2_ID06	0x00000020
#define CORPS_GROUP2_ID07	0x00000040
#define CORPS_GROUP2_ID08	0x00000080
#define CORPS_GROUP2_ID09	0x00000100
#define CORPS_GROUP2_ID10	0x00000200
#define CORPS_GROUP2_ID11	0x00000400
#define CORPS_GROUP2_ID12	0x00000800
#define CORPS_GROUP2_ID13	0x00001000
#define CORPS_GROUP2_ID14	0x00002000
#define CORPS_GROUP2_ID15	0x00004000
#define CORPS_GROUP2_ID16	0x00008000
#define CORPS_GROUP2_ID17	0x00010000
#define CORPS_GROUP2_ID18	0x00020000
#define CORPS_GROUP2_ID19	0x00040000
#define CORPS_GROUP2_ID20	0x00080000
#define CORPS_GROUP2_ID21	0x00100000
#define CORPS_GROUP2_ID22	0x00200000
#define CORPS_GROUP2_ID23	0x00400000
#define CORPS_GROUP2_ID24	0x00800000
#define CORPS_GROUP2_ID25	0x01000000
#define CORPS_GROUP2_ID26	0x02000000
#define CORPS_GROUP2_ID27	0x04000000
#define CORPS_GROUP2_ID28	0x08000000
#define CORPS_GROUP2_ID29	0x10000000
#define CORPS_GROUP2_ID30	0x20000000
#define CORPS_GROUP2_ID31	0x40000000


typedef enum {
	CORPS_GROUP_1 = 0,
	CORPS_GROUP_2
} CORPS_GROUP;

typedef enum {
	CORPS_RANGE_HERO = 0,				// refer to qunxiong
	CORPS_RANGE_INFANTRY,				// refer to bubing
	CORPS_RANGE_MOYU,						// refer to moyujian
	CORPS_RANGE_BROAD_SWORD,		// refer to dadao
	CORPS_RANGE_BIG_MOYU,				// refer to damoyujian
	CORPS_RANGE_SUPER_BIG_MOYU,	// refer to dadamoyujian
	CORPS_RANGE_NORMAL_SWORD,		// refer to yuxia
	CORPS_RANGE_SPEAR,					// refer to baoyan
	CORPS_RANGE_LONG_SPEAR,			// refer to changbaoyan
	CORPS_RANGE_GENERAL,				// refer to hujiang
	CORPS_RANGE_HORSEARCHER,		// refer to gongbing
	CORPS_RANGE_GREAT_HORSEARCHER,	// refer to gongbing erzhuan
	CORPS_RANGE_BALLISTA,				// refer to nupao
	CORPS_RANGE_SHORTBOW,				// refer to duangong
	CORPS_RANGE_LONGBOW,				// refer to changgong
	CORPS_RANGE_STRONGBOW,			// refer to qianggong
	CORPS_RANGE_GUN_CARRIAGE,		// refer to sheri
	CORPS_RANGE_REMOTE_GUN_CARRIAGE,	// refer to yuanpao
	// TODO: Add the range of masters' strategies 
	CORPS_RANGE_MAX
} CORPS_ATTACK_RANGE;

typedef struct {
	std::string category_name;
	CORPS_GROUP group;
	int	corps_id_in_group;
	std::vector<std::string> level_name;
	std::vector<CORPS_ATTACK_RANGE> level_range;
	std::vector<int> level_movement;
} Corps_Info;

#endif
